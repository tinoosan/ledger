name: ledger

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: ledger-keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8082:8080"
    volumes:
      - ./dev/keycloak/realm-export:/opt/keycloak/data/import:ro

  db:
    image: postgres:16
    container_name: ledger-pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ledger
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Run initial migration on first init of the data directory
      - ./db/migrations/0001_init.sql:/docker-entrypoint-initdb.d/0001_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 3s
      retries: 15

  api:
    build: .
    image: tinoosan/ledger:dev
    container_name: ledger-api
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    environment:
      # Internal DNS name 'db' from this compose network
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ledger?sslmode=disable
      DEV_SEED: "true"
      LOG_FORMAT: json
      LOG_LEVEL: INFO
      # Prefer RS256 via JWKS for service-to-service auth
      JWT_JWKS_URL: http://keycloak:8080/realms/internal/protocol/openid-connect/certs
      # Important: issuer must match the 'iss' in the token returned to Postman
      # Since Postman calls Keycloak via localhost:8082, the token's iss will be http://localhost:8082/realms/internal
      # Ledger only compares strings, so it's fine that this URL isn't reachable inside the container
      JWT_ISSUER: http://localhost:8082/realms/internal
      JWT_AUDIENCE: ledger-api
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  pgdata:
    driver: local
